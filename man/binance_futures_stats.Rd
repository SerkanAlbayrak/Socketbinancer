% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binance_futures_stats.R
\name{binance_futures_stats}
\alias{binance_futures_stats}
\title{Futures Statistics}
\usage{
binance_futures_stats(pair,
                      api, 
                      interval, 
                      indicator,
                      from, 
                      to, 
                      quiet = FALSE)
}
\arguments{
\item{pair}{Character. Trading pair, e.g. \code{"BTCUSDT"} or \code{"BTCUSD"}.}

\item{api}{Character, reference API. Available options are:
\itemize{
\item \code{"fapi"}: for \href{https://binance-docs.github.io/apidocs/futures/en/#open-interest}{futures USD-m API}.
\item \code{"dapi"}: for \href{https://binance-docs.github.io/apidocs/delivery/en/#open-interest}{futures COIN-m API}.
}}

\item{interval}{Character. Default is \code{"1h"}. Time interval for open interest data. Available intervals are:
\itemize{
\item Minutely: \code{"5m"}, \code{"15m"} and \code{"30m"}.
\item Hourly: \code{"1h"}, \code{"2h"}, \code{"4h"}, \code{"6h"}, \code{"8h"} and \code{"12h"}.
\item Daily: \code{"1d"}.
}}

\item{indicator}{Character statistics indicator}

\item{from}{Character or \code{\link[=POSIXt-class]{POSIXt}} object. Start time for historical data, only last 30 days are available.
If it is \code{missing}, the default, will be used as start date \code{Sys.time()-lubridate::days(30)}.}

\item{to}{Character or \code{\link[=POSIXt-class]{POSIXt}} object. End time for historical data, only last 30 days are available.
If it is \code{missing}, the default, will be used as start date \code{Sys.time()}.}

\item{quiet}{Logical. Default is \code{FALSE}. If \code{TRUE} suppress messages and warnings.}
}
\value{
A \code{\link[tibble]{tibble}}
}
\description{
Get the historical statitics for futures.
}
\details{
The IP weight for this API call is 1, and the data source is memory.
The historical open interest data are only available for the last 30 days.
}
\examples{
# Statistics in USD-m market     
binance_futures_stats(pair = "BTCUSDT", 
                      api = "fapi", 
                      interval = "1d", 
                      indicator = "takerlongshortRatio", 
                      from = Sys.Date()-2)
binance_futures_stats(pair = "BTCUSDT", 
                      api = "fapi", 
                      interval = "1d", 
                      indicator = "globalLongShortAccountRatio", 
                      from = Sys.Date()-2)
binance_futures_stats(pair = "BTCUSDT", 
                      api = "fapi", 
                      interval = "1d", 
                      indicator = "topLongShortPositionRatio", 
                      from = Sys.Date()-2)
binance_futures_stats(pair = "BTCUSDT", 
                      api = "fapi", 
                      interval = "1d", 
                      indicator = "topLongShortAccountRatio", 
                      from = Sys.Date()-2)    
                      
# Statistics in COIN-m market                       
binance_futures_stats(pair = "BTCUSD", 
                      api = "dapi", 
                      interval = "1d", 
                      indicator = "takerBuySellVol", 
                      from = Sys.Date()-2)
binance_futures_stats(pair = "BTCUSD", 
                      api = "dapi", 
                      interval = "1d", 
                      indicator = "globalLongShortAccountRatio", 
                      from = Sys.Date()-2)
binance_futures_stats(pair = "BTCUSD", 
                      api = "dapi", 
                      interval = "1d", 
                      indicator = "topLongShortPositionRatio", 
                      from = Sys.Date()-2)
binance_futures_stats(pair = "BTCUSD", 
                      api = "dapi", 
                      interval = "1d", 
                      indicator = "topLongShortAccountRatio", 
                      from = Sys.Date()-2) 
                      
}
\keyword{market}
\keyword{rest}
