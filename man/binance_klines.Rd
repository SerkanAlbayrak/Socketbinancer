% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binance_klines.R
\name{binance_klines}
\alias{binance_klines}
\title{Binance Klines}
\usage{
binance_klines(pair,
               api,
               interval, 
               from, 
               to,
               contract_type,
               uiKlines = FALSE,
               as_xts = FALSE,
               quiet = FALSE)
}
\arguments{
\item{pair}{Character. Trading pair, e.g. \code{"BTCUSDT"}.}

\item{api}{Character. Reference API. If it is \code{missing}, the default, will be used \code{"spot"}. Available options are:
\itemize{
\item \code{"spot"}: for endpoint \href{https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-data}{api/v3/klines}. The ip weight is 2.
\item \code{"fapi"}: for endpoint \href{https://binance-docs.github.io/apidocs/futures/en/#kline-candlestick-data}{fapi/v1/klines}. The ip weight is 10.
\item \code{"dapi"}: for endpoint \href{https://binance-docs.github.io/apidocs/delivery/en/#kline-candlestick-data}{dapi/v1/klines}. The ip weight is 10.
\item \code{"eapi"}: for endpoint \href{https://binance-docs.github.io/apidocs/voptions/en/#kline-candlestick-data}{eapi/v1/klines}. The ip weight is 1.
}}

\item{interval}{Character. Default is \code{"1d"}. Time interval for klines data. Available intervals are:
\itemize{
\item Secondly: \code{"1s"}, available only if \code{api = "spot"}.
\item Minutely: \code{"1m"}, \code{"3m"}, \code{"5m"}, \code{"15m"} and \code{"30m"}.
\item Hourly: \code{"1h"}, \code{"2h"}, \code{"4h"}, \code{"6h"}, \code{"8h"} and \code{"12h"}.
\item Daily: \code{"1d"} and \code{"3d"}.
\item Weekly: \code{"1w"}.
\item Monthly: \code{"1M"}.
}}

\item{from}{Character or \code{\link[=POSIXt-class]{POSIXt}} object. Start time for historical data.
If it is \code{missing}, the default, will be used as start date \code{Sys.time()-lubridate::days(1)}.}

\item{to}{Character or \code{\link[=POSIXt-class]{POSIXt}} object. End time for historical data.
If it is \code{missing}, the default, will be used as end date \code{\link[=Sys.time]{Sys.time()}}.}

\item{contract_type}{Character. Used only if \code{api} is \code{"fapi"} or \code{"dapi"}. Available contract's types are:
\itemize{
\item \code{"perpetual"}: perpetual futures.
\item \code{"current_quarter"}: futures with maturity in the current quarter.
\item \code{"next_quarter"}: futures with maturity in the next quarter.
}}

\item{uiKlines}{Logical. Default is \code{FALSE}. If \code{TRUE} return data in UIklines format.}

\item{as_xts}{Logical. Default is \code{FALSE}. If \code{TRUE} convert the data into an \code{\link[xts]{xts}} object.}

\item{quiet}{Logical. Default is \code{FALSE}. If \code{TRUE} suppress messages and warnings.}
}
\value{
A \code{\link[tibble]{tibble}} with 13 columns:
\itemize{
\item \code{date}: \code{\link[=POSIXt-class]{POSIXt}}, the opening date of the candle.
\item \code{date_close}: \code{\link[=POSIXt-class]{POSIXt}}, the closing date of the candle.
\item \code{market}: Character, API.
\item \code{pair}: Character, trading pair.
\item \code{open}: Numeric, open price (price in \code{date}).
\item \code{high}: Numeric, highest price from \code{date} up to \code{date_close}.
\item \code{low}: Numeric, lowest price from \code{date} up to \code{date_close}.
\item \code{close}: Numeric, close price or price in \code{date_close}.
\item \code{volume}: Numeric, volume in asset value.
\item \code{volume_quote}: Numeric, volume in quote asset value.
\item \code{trades}: Numeric, number of trades from \code{date} up to \code{date_close}.
\item \code{taker_buy}: Numeric, taker buy volume in asset value.
\item \code{taker_buy_quote}: Numeric, taker buy volume in quote asset value.
}
}
\description{
Get klines/candlestick data for a trading pair.
}
\examples{
# Get 1-hour OHLC data for BTCUSDT in the spot market
binance_klines(pair = "BTCUSDT", api = "spot", interval = "1h")

# Get 30-minute OHLC data for BTCUSDT in USD-m market
# Perpetual contracts 
binance_klines(pair = "BTCUSDT", api = "fapi", interval = "30m", uiKlines = FALSE)
binance_klines(pair = "BTCUSDT", api = "fapi", interval = "30m", 
               uiKlines = TRUE, contract_type = "perpetual")
# Futures contracts with maturity in current quarter 
binance_klines(pair = "BTCUSDT", api = "fapi", interval = "30m", 
               uiKlines = TRUE, contract_type = "current_quarter")
# Futures contracts with maturity in next quarter 
binance_klines(pair = "BTCUSDT", api = "fapi", interval = "30m", 
               uiKlines = TRUE, contract_type = "next_quarter")
               
# Get 15-minute OHLC data for BTCUSD in COIN-m market
# Perpetual contracts 
binance_klines(pair = "BTCUSD_PERP", api = "dapi", interval = "15m", uiKlines = FALSE)
binance_klines(pair = "BTCUSD", api = "dapi", interval = "15m", 
               uiKlines = TRUE, contract_type = "perpetual") 
# Futures contracts with maturity in current quarter 
binance_klines(pair = "BTCUSD", api = "dapi", interval = "15m", 
               uiKlines = TRUE, contract_type = "current_quarter") 
# Futures contracts with maturity in next quarter 
binance_klines(pair = "BTCUSD", api = "dapi", interval = "1h", 
               uiKlines = TRUE, contract_type = "next_quarter")

# Get 1-hour OHLC data for a put option on BTCUSDT.
# Strike of 30000 and maturity on 2024-06-28.
binance_klines(pair = "BTC-240628-30000-P", api = "eapi", interval = "1h")

}
\keyword{candlestick}
\keyword{market}
\keyword{rest}
\keyword{uiklines}
